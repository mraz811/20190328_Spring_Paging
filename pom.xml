<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>happy.com</groupId>
  <artifactId>20190328_Spring_Paging</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>20190328_Spring_Paging Maven Webapp</name>
  <url>http://maven.apache.org</url>

<!-- 문서에서 많이 사용하거나 혹은 라이브러리의 버전을 동일화 시키기 위해서 선언 변수 -->
	<properties>
		<java-version>1.8</java-version>
		<org.springframework-version>4.0.1.RELEASE</org.springframework-version>
		<!-- AOP 관점 지향 프로그램을 위해서 필요한 라이브러리 -->
		<org.aspectj-version>1.8.3</org.aspectj-version>
		<!-- 로그 처리를 위해서 사용. log4j를 상속받아 다시 구성함 -->
		<org.slf4j-version>1.6.6</org.slf4j-version>
	</properties>

	<!-- repositories : maven의 기본 repository에서 jar파일을 검색 시 없을 경우 차선으로 찾는 jar 저장 공간 -->
	<repositories>
		<repository>
			<id>oracle</id>
			<name>ORACLE JDBC Repository</name>
			<url>https://maven.atlassian.com/3rdparty/</url>
		</repository>
	</repositories>

  <dependencies>
    <!-- Spring framework을 사용하기 위한 MVC 기본 라이브러리 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
	

	<!-- Logging : log4j>slf4j, scope(객체가 만들어지는 환경) -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>
		
		<!-- @Inject// IoC 제어역전 : 객체를 끌고 와서 사용함. Dependency Injection? -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		
		<!-- Servlet을 작동하기 위한 라이브러리. 하지만 버전 2.5 사용하진 않을 예정 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- String을 처리할 때 좀 더 편하게 처리하기 위함 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.8.1</version>
		</dependency>
		
		<!-- ojdbc6 -->
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>12.1.0.1-atlassian-hosted</version>
		</dependency>
		
		<!-- ORM Mybatis 사용 -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.4.6</version>
		</dependency>
		
		<!-- spring에서 mybatis를 연동하기 위해 필요한 라이브러리 -->
		<dependency>
  		  	<groupId>org.mybatis</groupId>
  		  	<artifactId>mybatis-spring</artifactId>
   			<version>1.3.2</version>
		</dependency>
		
		<!-- Spring Object/Relation Mapping, Spring transaction처리 tx -->
		<dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-orm</artifactId>
    		<version>${org.springframework-version}</version>
		</dependency>
		
		<!-- 접속 정보를 담는 객체 DataSource를 처리 -->
		<dependency>
    		<groupId>commons-dbcp</groupId>
    		<artifactId>commons-dbcp</artifactId>
    		<version>1.4</version>
		</dependency>

		<!-- AOP를 사용하기 위한 라이브러리 -->
		<!-- AspectJ : 관점지향 프로그램을 작성하기 위한 라이브러리 CCC(Cross Cutting Concern)-->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>
		
  </dependencies>
  <build>
    <finalName>20190328_Spring_Paging</finalName>
    <plugins>
	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-compiler-plugin</artifactId>
		<version>2.5.1</version>
		<configuration>
			<source>1.8</source>
			<target>1.8</target>
			<compilerArgument>-Xlint:all</compilerArgument>
			<showWarnings>true</showWarnings>
			<showDeprecation>true</showDeprecation>
		</configuration>
	</plugin>
    </plugins>
  </build>
</project>
